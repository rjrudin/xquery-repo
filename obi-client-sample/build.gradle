/**
 * You can use this project as a starting point for a new OBI project. For details on how the Gradle file works, please
 * see the sample-project in the marklogic-java Github repository - https://github.com/rjrudin/marklogic-java/tree/master/sample-project.
 *
 * To install this sample app, just run "gradle mlDeploy" from this directory. This will install OBI along with the
 * modules found in the src/main/xqy directory in this project. You can then go to http://localhost:8025/v1/resources/api to see the 
 * documentation for the OBI services and the "my-service" service that is installed. 
 */
 
buildscript {
  repositories {
    mavenCentral()
    maven {url "http://developer.marklogic.com/maven2/"}
    maven {url "http://rjrudin.github.io/marklogic-java/releases"}
  }
  
  dependencies {
    classpath "com.rjrudin:ml-gradle:2.0b5"
  }
}

// Only need these if you want to open the project in Eclipse and do Java-ish things
apply plugin: 'java'
apply plugin: 'eclipse'

// Need this plugin to enable all the ml-gradle tasks
apply plugin: 'ml-gradle'

// This repository hosts zips of the OBI XQuery code
repositories {
  maven {url "http://rjrudin.github.io/xquery-repo/releases"}
}

// This dependency will tell Gradle to download the OBI XQuery zip and install all of the code into your REST API modules database
dependencies {
  mlRestApi "com.marklogic:obi-xquery:1.0rc1"
}

// Your content database needs to include some OBI configuration settings, and you're free to add whatever other
// configuration settings you wish
ext {
  mlAppConfig {
      modulePaths = ["src/main/xqy"]
      configDir.contentDatabaseFiles.add(new File("build/mlRestApi/obi/ml-config/databases/content-database.json"))
      configDir.contentDatabaseFiles.add(new File("build/mlRestApi/obi/ml-config/databases/obi-ids-content-database.json"))
  }
}
